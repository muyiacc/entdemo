// Code generated by ent, DO NOT EDIT.

package item

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the item type in the database.
	Label = "item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDt holds the string denoting the dt field in the database.
	FieldDt = "dt"
	// FieldCat holds the string denoting the cat field in the database.
	FieldCat = "cat"
	// FieldSize holds the string denoting the size field in the database.
	FieldSize = "size"
	// FieldExtID holds the string denoting the ext_id field in the database.
	FieldExtID = "ext_id"
	// FieldImdb holds the string denoting the imdb field in the database.
	FieldImdb = "imdb"
	// Table holds the table name of the item in the database.
	Table = "items"
)

// Columns holds all SQL columns for item fields.
var Columns = []string{
	FieldID,
	FieldHash,
	FieldTitle,
	FieldDt,
	FieldCat,
	FieldSize,
	FieldExtID,
	FieldImdb,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Item queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHash orders the results by the hash field.
func ByHash(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHash, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByDt orders the results by the dt field.
func ByDt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDt, opts...).ToFunc()
}

// ByCat orders the results by the cat field.
func ByCat(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCat, opts...).ToFunc()
}

// BySize orders the results by the size field.
func BySize(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSize, opts...).ToFunc()
}

// ByExtID orders the results by the ext_id field.
func ByExtID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExtID, opts...).ToFunc()
}

// ByImdb orders the results by the imdb field.
func ByImdb(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImdb, opts...).ToFunc()
}
